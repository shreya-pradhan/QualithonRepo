<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="6" ignored="0" total="28" passed="22">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="930672" started-at="2022-02-20T23:32:11 NPT" finished-at="2022-02-20T23:47:42 NPT">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="930672" started-at="2022-02-20T23:32:11 NPT" finished-at="2022-02-20T23:47:42 NPT">
      <class name="com.qt.qualithon.test.MovieSearchTest">
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="6892" started-at="2022-02-20T23:32:11 NPT" finished-at="2022-02-20T23:32:18 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="6892" started-at="2022-02-20T23:32:11 NPT" finished-at="2022-02-20T23:32:18 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectDirectorName(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectDirectorName" duration-ms="37924" started-at="2022-02-20T23:32:18 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:32:56 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectDirectorName -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectGenres(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectGenres" duration-ms="37399" started-at="2022-02-20T23:32:18 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:32:56 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectGenres -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="709" started-at="2022-02-20T23:32:56 NPT" finished-at="2022-02-20T23:32:56 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="691" started-at="2022-02-20T23:32:56 NPT" finished-at="2022-02-20T23:32:57 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="2438" started-at="2022-02-20T23:32:56 NPT" finished-at="2022-02-20T23:32:59 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="2471" started-at="2022-02-20T23:32:57 NPT" finished-at="2022-02-20T23:32:59 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectGenres(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectGenres" duration-ms="32685" started-at="2022-02-20T23:32:59 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:33:32 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectGenres -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectDirectorName(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectDirectorName" duration-ms="31007" started-at="2022-02-20T23:32:59 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:33:30 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectDirectorName -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="751" started-at="2022-02-20T23:33:30 NPT" finished-at="2022-02-20T23:33:31 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="2417" started-at="2022-02-20T23:33:31 NPT" finished-at="2022-02-20T23:33:34 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="724" started-at="2022-02-20T23:33:32 NPT" finished-at="2022-02-20T23:33:32 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="2447" started-at="2022-02-20T23:33:32 NPT" finished-at="2022-02-20T23:33:35 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectMaturityRating(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectMaturityRating" duration-ms="38527" started-at="2022-02-20T23:33:34 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:34:12 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectMaturityRating -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectMovieRatingScore(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectMovieRatingScore" duration-ms="36349" started-at="2022-02-20T23:33:35 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:34:11 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectMovieRatingScore -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="863" started-at="2022-02-20T23:34:11 NPT" finished-at="2022-02-20T23:34:12 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="2410" started-at="2022-02-20T23:34:12 NPT" finished-at="2022-02-20T23:34:14 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="745" started-at="2022-02-20T23:34:12 NPT" finished-at="2022-02-20T23:34:13 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="2602" started-at="2022-02-20T23:34:13 NPT" finished-at="2022-02-20T23:34:15 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectMovieRatingScore(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectMovieRatingScore" duration-ms="33054" started-at="2022-02-20T23:34:14 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:34:47 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectMovieRatingScore -->
        <test-method status="FAIL" signature="testMovieMetadataOnWebHasCorrectMaturityRating(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectMaturityRating" duration-ms="32348" started-at="2022-02-20T23:34:15 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:34:48 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <exception class="org.junit.ComparisonFailure">
            <message>
              <![CDATA[expected:<"[PG-13]"> but was:<"[12A]">]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.junit.ComparisonFailure: expected:<"[PG-13]"> but was:<"[12A]">
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at com.qt.qualithon.test.MovieSearchTest.testMovieMetadataOnWebHasCorrectMaturityRating(MovieSearchTest.java:165)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.junit.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectMaturityRating -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="752" started-at="2022-02-20T23:34:47 NPT" finished-at="2022-02-20T23:34:48 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="798" started-at="2022-02-20T23:34:48 NPT" finished-at="2022-02-20T23:34:49 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="2742" started-at="2022-02-20T23:34:48 NPT" finished-at="2022-02-20T23:34:51 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="2475" started-at="2022-02-20T23:34:49 NPT" finished-at="2022-02-20T23:34:51 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectReleaseYear(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectReleaseYear" duration-ms="34176" started-at="2022-02-20T23:34:51 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:35:25 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectReleaseYear -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectWriters(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectWriters" duration-ms="31443" started-at="2022-02-20T23:34:51 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:35:23 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectWriters -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="708" started-at="2022-02-20T23:35:23 NPT" finished-at="2022-02-20T23:35:23 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="2390" started-at="2022-02-20T23:35:23 NPT" finished-at="2022-02-20T23:35:26 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="724" started-at="2022-02-20T23:35:25 NPT" finished-at="2022-02-20T23:35:26 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectWriters(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectWriters" duration-ms="32364" started-at="2022-02-20T23:35:26 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:35:58 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectWriters -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="2554" started-at="2022-02-20T23:35:26 NPT" finished-at="2022-02-20T23:35:28 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectReleaseYear(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectReleaseYear" duration-ms="31702" started-at="2022-02-20T23:35:28 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:36:00 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectReleaseYear -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="802" started-at="2022-02-20T23:35:58 NPT" finished-at="2022-02-20T23:35:59 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="2413" started-at="2022-02-20T23:35:59 NPT" finished-at="2022-02-20T23:36:01 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="696" started-at="2022-02-20T23:36:00 NPT" finished-at="2022-02-20T23:36:01 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSearchByExactMovieTitleReturnsMovieAsFirstResult(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSearchByExactMovieTitleReturnsMovieAsFirstResult" duration-ms="34155" started-at="2022-02-20T23:36:01 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:36:35 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchByExactMovieTitleReturnsMovieAsFirstResult -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="713" started-at="2022-02-20T23:36:35 NPT" finished-at="2022-02-20T23:36:36 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="2413" started-at="2022-02-20T23:36:36 NPT" finished-at="2022-02-20T23:36:39 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testSearchByExactMovieTitleReturnsMovieAsFirstResult(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSearchByExactMovieTitleReturnsMovieAsFirstResult" duration-ms="30766" started-at="2022-02-20T23:36:39 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:37:09 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchByExactMovieTitleReturnsMovieAsFirstResult -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="721" started-at="2022-02-20T23:37:09 NPT" finished-at="2022-02-20T23:37:10 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
      </class> <!-- com.qt.qualithon.test.MovieSearchTest -->
      <class name="com.qt.qualithon.test.RottenTomatoesMovieSearchTest">
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="2633" started-at="2022-02-20T23:36:01 NPT" finished-at="2022-02-20T23:36:03 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectDirectorName(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testMovieMetadataOnWebHasCorrectDirectorName" duration-ms="87012" started-at="2022-02-20T23:36:03 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:37:30 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectDirectorName -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="2398" started-at="2022-02-20T23:37:10 NPT" finished-at="2022-02-20T23:37:12 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="FAIL" signature="testMovieMetadataOnWebHasCorrectGenres(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testMovieMetadataOnWebHasCorrectGenres" duration-ms="59126" started-at="2022-02-20T23:37:12 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:38:12 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expecting ArrayList:
  ["Drama", " Comedy"]
to contain only:
  ["Crime", "Sci-Fi"]
element(s) not found:
  ["Crime", "Sci-Fi"]
and element(s) not expected:
  ["Drama", " Comedy"]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expecting ArrayList:
  ["Drama", " Comedy"]
to contain only:
  ["Crime", "Sci-Fi"]
element(s) not found:
  ["Crime", "Sci-Fi"]
and element(s) not expected:
  ["Drama", " Comedy"]

at com.qt.qualithon.test.RottenTomatoesMovieSearchTest.testMovieMetadataOnWebHasCorrectGenres(RottenTomatoesMovieSearchTest.java:141)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectGenres -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="668" started-at="2022-02-20T23:37:30 NPT" finished-at="2022-02-20T23:37:31 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="2683" started-at="2022-02-20T23:37:31 NPT" finished-at="2022-02-20T23:37:34 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectDirectorName(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testMovieMetadataOnWebHasCorrectDirectorName" duration-ms="89744" started-at="2022-02-20T23:37:34 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:39:03 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectDirectorName -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="704" started-at="2022-02-20T23:38:12 NPT" finished-at="2022-02-20T23:38:12 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="2546" started-at="2022-02-20T23:38:12 NPT" finished-at="2022-02-20T23:38:15 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="FAIL" signature="testMovieMetadataOnWebHasCorrectGenres(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testMovieMetadataOnWebHasCorrectGenres" duration-ms="87250" started-at="2022-02-20T23:38:15 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:39:42 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expecting ArrayList:
  ["Fantasy", " Action", " Mystery & Thriller", " Adventure"]
to contain only:
  ["Action", "Crime", "Drama"]
element(s) not found:
  ["Action", "Crime", "Drama"]
and element(s) not expected:
  ["Fantasy", " Action", " Mystery & Thriller", " Adventure"]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expecting ArrayList:
  ["Fantasy", " Action", " Mystery & Thriller", " Adventure"]
to contain only:
  ["Action", "Crime", "Drama"]
element(s) not found:
  ["Action", "Crime", "Drama"]
and element(s) not expected:
  ["Fantasy", " Action", " Mystery & Thriller", " Adventure"]

at com.qt.qualithon.test.RottenTomatoesMovieSearchTest.testMovieMetadataOnWebHasCorrectGenres(RottenTomatoesMovieSearchTest.java:141)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectGenres -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="721" started-at="2022-02-20T23:39:03 NPT" finished-at="2022-02-20T23:39:04 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="2606" started-at="2022-02-20T23:39:04 NPT" finished-at="2022-02-20T23:39:07 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="FAIL" signature="testMovieMetadataOnWebHasCorrectMaturityRating(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testMovieMetadataOnWebHasCorrectMaturityRating" duration-ms="81358" started-at="2022-02-20T23:39:07 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:40:28 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <exception class="org.junit.ComparisonFailure">
            <message>
              <![CDATA[expected:<"[X]"> but was:<"[R]">]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.junit.ComparisonFailure: expected:<"[X]"> but was:<"[R]">
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at com.qt.qualithon.test.RottenTomatoesMovieSearchTest.testMovieMetadataOnWebHasCorrectMaturityRating(RottenTomatoesMovieSearchTest.java:160)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.junit.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectMaturityRating -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="720" started-at="2022-02-20T23:39:42 NPT" finished-at="2022-02-20T23:39:43 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="2304" started-at="2022-02-20T23:39:43 NPT" finished-at="2022-02-20T23:39:45 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectMovieRatingScore(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testMovieMetadataOnWebHasCorrectMovieRatingScore" duration-ms="84556" started-at="2022-02-20T23:39:45 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:41:10 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectMovieRatingScore -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="848" started-at="2022-02-20T23:40:28 NPT" finished-at="2022-02-20T23:40:29 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="2329" started-at="2022-02-20T23:40:29 NPT" finished-at="2022-02-20T23:40:31 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectMaturityRating(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testMovieMetadataOnWebHasCorrectMaturityRating" duration-ms="87416" started-at="2022-02-20T23:40:31 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:41:59 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectMaturityRating -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="739" started-at="2022-02-20T23:41:10 NPT" finished-at="2022-02-20T23:41:10 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="2422" started-at="2022-02-20T23:41:10 NPT" finished-at="2022-02-20T23:41:13 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectMovieRatingScore(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testMovieMetadataOnWebHasCorrectMovieRatingScore" duration-ms="78827" started-at="2022-02-20T23:41:13 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:42:32 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectMovieRatingScore -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="689" started-at="2022-02-20T23:41:59 NPT" finished-at="2022-02-20T23:41:59 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="2431" started-at="2022-02-20T23:41:59 NPT" finished-at="2022-02-20T23:42:02 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectReleaseYear(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testMovieMetadataOnWebHasCorrectReleaseYear" duration-ms="79906" started-at="2022-02-20T23:42:02 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:43:22 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectReleaseYear -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="702" started-at="2022-02-20T23:42:32 NPT" finished-at="2022-02-20T23:42:32 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="2520" started-at="2022-02-20T23:42:32 NPT" finished-at="2022-02-20T23:42:35 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="FAIL" signature="testMovieMetadataOnWebHasCorrectWriters(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testMovieMetadataOnWebHasCorrectWriters" duration-ms="77299" started-at="2022-02-20T23:42:35 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:43:52 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expecting ArrayList:
  ["Stanley Kubrick"]
to contain only:
  ["Stanley Kubrick", "Anthony Burgess"]
but could not find the following element(s):
  ["Anthony Burgess"]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expecting ArrayList:
  ["Stanley Kubrick"]
to contain only:
  ["Stanley Kubrick", "Anthony Burgess"]
but could not find the following element(s):
  ["Anthony Burgess"]

at com.qt.qualithon.test.RottenTomatoesMovieSearchTest.testMovieMetadataOnWebHasCorrectWriters(RottenTomatoesMovieSearchTest.java:121)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectWriters -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="783" started-at="2022-02-20T23:43:22 NPT" finished-at="2022-02-20T23:43:23 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="2308" started-at="2022-02-20T23:43:23 NPT" finished-at="2022-02-20T23:43:25 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectReleaseYear(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testMovieMetadataOnWebHasCorrectReleaseYear" duration-ms="85330" started-at="2022-02-20T23:43:25 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:44:50 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectReleaseYear -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="758" started-at="2022-02-20T23:43:52 NPT" finished-at="2022-02-20T23:43:53 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="2278" started-at="2022-02-20T23:43:53 NPT" finished-at="2022-02-20T23:43:55 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="FAIL" signature="testMovieMetadataOnWebHasCorrectWriters(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testMovieMetadataOnWebHasCorrectWriters" duration-ms="74040" started-at="2022-02-20T23:43:55 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:45:09 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expecting ArrayList:
  ["Christopher Nolan"]
to contain only:
  ["Jonathan Nolan", "Christopher Nolan", "David S. Goyer"]
but could not find the following element(s):
  ["Jonathan Nolan", "David S. Goyer"]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expecting ArrayList:
  ["Christopher Nolan"]
to contain only:
  ["Jonathan Nolan", "Christopher Nolan", "David S. Goyer"]
but could not find the following element(s):
  ["Jonathan Nolan", "David S. Goyer"]

at com.qt.qualithon.test.RottenTomatoesMovieSearchTest.testMovieMetadataOnWebHasCorrectWriters(RottenTomatoesMovieSearchTest.java:121)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectWriters -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="797" started-at="2022-02-20T23:44:50 NPT" finished-at="2022-02-20T23:44:51 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="2469" started-at="2022-02-20T23:44:51 NPT" finished-at="2022-02-20T23:44:53 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testSearchByExactMovieTitleReturnsMovieAsFirstResult(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSearchByExactMovieTitleReturnsMovieAsFirstResult" duration-ms="84743" started-at="2022-02-20T23:44:53 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:46:18 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchByExactMovieTitleReturnsMovieAsFirstResult -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="688" started-at="2022-02-20T23:45:09 NPT" finished-at="2022-02-20T23:45:10 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="782" started-at="2022-02-20T23:46:18 NPT" finished-at="2022-02-20T23:46:19 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="2509" started-at="2022-02-20T23:46:19 NPT" finished-at="2022-02-20T23:46:22 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testSearchByExactMovieTitleReturnsMovieAsFirstResult(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSearchByExactMovieTitleReturnsMovieAsFirstResult" duration-ms="79726" started-at="2022-02-20T23:46:22 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:47:41 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchByExactMovieTitleReturnsMovieAsFirstResult -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="780" started-at="2022-02-20T23:47:41 NPT" finished-at="2022-02-20T23:47:42 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
      </class> <!-- com.qt.qualithon.test.RottenTomatoesMovieSearchTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
