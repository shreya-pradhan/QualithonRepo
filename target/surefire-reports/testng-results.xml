<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" ignored="0" total="21" passed="17">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="508635" started-at="2022-02-20T23:13:36 NPT" finished-at="2022-02-20T23:22:05 NPT">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="508635" started-at="2022-02-20T23:13:36 NPT" finished-at="2022-02-20T23:22:05 NPT">
      <class name="com.qt.qualithon.test.MovieSearchTest">
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="5056" started-at="2022-02-20T23:13:36 NPT" finished-at="2022-02-20T23:13:41 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="5055" started-at="2022-02-20T23:13:36 NPT" finished-at="2022-02-20T23:13:41 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectGenres(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectGenres" duration-ms="24200" started-at="2022-02-20T23:13:41 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:14:05 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectGenres -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectDirectorName(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectDirectorName" duration-ms="24290" started-at="2022-02-20T23:13:41 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:14:05 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectDirectorName -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="895" started-at="2022-02-20T23:14:05 NPT" finished-at="2022-02-20T23:14:06 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="844" started-at="2022-02-20T23:14:05 NPT" finished-at="2022-02-20T23:14:06 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="1770" started-at="2022-02-20T23:14:06 NPT" finished-at="2022-02-20T23:14:08 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="1902" started-at="2022-02-20T23:14:06 NPT" finished-at="2022-02-20T23:14:08 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectGenres(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectGenres" duration-ms="23614" started-at="2022-02-20T23:14:08 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:14:32 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectGenres -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectDirectorName(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectDirectorName" duration-ms="22152" started-at="2022-02-20T23:14:08 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:14:30 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectDirectorName -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="801" started-at="2022-02-20T23:14:30 NPT" finished-at="2022-02-20T23:14:31 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="1416" started-at="2022-02-20T23:14:31 NPT" finished-at="2022-02-20T23:14:32 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="908" started-at="2022-02-20T23:14:32 NPT" finished-at="2022-02-20T23:14:32 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="1521" started-at="2022-02-20T23:14:32 NPT" finished-at="2022-02-20T23:14:34 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectMaturityRating(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectMaturityRating" duration-ms="22953" started-at="2022-02-20T23:14:32 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:14:55 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectMaturityRating -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectMovieRatingScore(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectMovieRatingScore" duration-ms="20959" started-at="2022-02-20T23:14:34 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:14:55 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectMovieRatingScore -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="879" started-at="2022-02-20T23:14:55 NPT" finished-at="2022-02-20T23:14:56 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="742" started-at="2022-02-20T23:14:55 NPT" finished-at="2022-02-20T23:14:56 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="1421" started-at="2022-02-20T23:14:56 NPT" finished-at="2022-02-20T23:14:57 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="1728" started-at="2022-02-20T23:14:56 NPT" finished-at="2022-02-20T23:14:58 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectMovieRatingScore(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectMovieRatingScore" duration-ms="28042" started-at="2022-02-20T23:14:57 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:15:25 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectMovieRatingScore -->
        <test-method status="FAIL" signature="testMovieMetadataOnWebHasCorrectMaturityRating(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectMaturityRating" duration-ms="28313" started-at="2022-02-20T23:14:58 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:15:26 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <exception class="org.junit.ComparisonFailure">
            <message>
              <![CDATA[expected:<"[PG-13]"> but was:<"[12A]">]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.junit.ComparisonFailure: expected:<"[PG-13]"> but was:<"[12A]">
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at com.qt.qualithon.test.MovieSearchTest.testMovieMetadataOnWebHasCorrectMaturityRating(MovieSearchTest.java:165)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.junit.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectMaturityRating -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="718" started-at="2022-02-20T23:15:25 NPT" finished-at="2022-02-20T23:15:26 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="2404" started-at="2022-02-20T23:15:26 NPT" finished-at="2022-02-20T23:15:28 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="729" started-at="2022-02-20T23:15:26 NPT" finished-at="2022-02-20T23:15:27 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="1819" started-at="2022-02-20T23:15:27 NPT" finished-at="2022-02-20T23:15:29 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectReleaseYear(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectReleaseYear" duration-ms="26575" started-at="2022-02-20T23:15:28 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:15:55 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectReleaseYear -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectWriters(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectWriters" duration-ms="28464" started-at="2022-02-20T23:15:29 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:15:57 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectWriters -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="771" started-at="2022-02-20T23:15:55 NPT" finished-at="2022-02-20T23:15:56 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="1615" started-at="2022-02-20T23:15:56 NPT" finished-at="2022-02-20T23:15:57 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="872" started-at="2022-02-20T23:15:57 NPT" finished-at="2022-02-20T23:15:58 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectReleaseYear(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectReleaseYear" duration-ms="24599" started-at="2022-02-20T23:15:57 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:16:22 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectReleaseYear -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="1618" started-at="2022-02-20T23:15:58 NPT" finished-at="2022-02-20T23:16:00 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectWriters(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testMovieMetadataOnWebHasCorrectWriters" duration-ms="24385" started-at="2022-02-20T23:16:00 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:16:24 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectWriters -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="789" started-at="2022-02-20T23:16:22 NPT" finished-at="2022-02-20T23:16:23 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="1733" started-at="2022-02-20T23:16:23 NPT" finished-at="2022-02-20T23:16:25 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="1227" started-at="2022-02-20T23:16:24 NPT" finished-at="2022-02-20T23:16:25 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSearchByExactMovieTitleReturnsMovieAsFirstResult(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSearchByExactMovieTitleReturnsMovieAsFirstResult" duration-ms="22229" started-at="2022-02-20T23:16:25 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:16:47 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchByExactMovieTitleReturnsMovieAsFirstResult -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="1132" started-at="2022-02-20T23:16:47 NPT" finished-at="2022-02-20T23:16:48 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSessionSetUp" is-config="true" duration-ms="2430" started-at="2022-02-20T23:16:48 NPT" finished-at="2022-02-20T23:16:50 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testSearchByExactMovieTitleReturnsMovieAsFirstResult(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testSearchByExactMovieTitleReturnsMovieAsFirstResult" duration-ms="32441" started-at="2022-02-20T23:16:50 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:17:23 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchByExactMovieTitleReturnsMovieAsFirstResult -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@6737fd8f]" name="testTearDown" is-config="true" duration-ms="709" started-at="2022-02-20T23:17:23 NPT" finished-at="2022-02-20T23:17:23 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
      </class> <!-- com.qt.qualithon.test.MovieSearchTest -->
      <class name="com.qt.qualithon.test.RottenTomatoesMovieSearchTest">
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="1843" started-at="2022-02-20T23:16:25 NPT" finished-at="2022-02-20T23:16:27 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectDirectorName(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testMovieMetadataOnWebHasCorrectDirectorName" duration-ms="71085" started-at="2022-02-20T23:16:27 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:17:38 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectDirectorName -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="2481" started-at="2022-02-20T23:17:23 NPT" finished-at="2022-02-20T23:17:26 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="FAIL" signature="testMovieMetadataOnWebHasCorrectGenres(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testMovieMetadataOnWebHasCorrectGenres" duration-ms="80319" started-at="2022-02-20T23:17:26 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:18:46 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expecting ArrayList:
  ["Drama", " Comedy"]
to contain only:
  ["Crime", "Sci-Fi"]
element(s) not found:
  ["Crime", "Sci-Fi"]
and element(s) not expected:
  ["Drama", " Comedy"]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expecting ArrayList:
  ["Drama", " Comedy"]
to contain only:
  ["Crime", "Sci-Fi"]
element(s) not found:
  ["Crime", "Sci-Fi"]
and element(s) not expected:
  ["Drama", " Comedy"]

at com.qt.qualithon.test.RottenTomatoesMovieSearchTest.testMovieMetadataOnWebHasCorrectGenres(RottenTomatoesMovieSearchTest.java:141)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectGenres -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="706" started-at="2022-02-20T23:17:38 NPT" finished-at="2022-02-20T23:17:39 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="2356" started-at="2022-02-20T23:17:39 NPT" finished-at="2022-02-20T23:17:41 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="FAIL" signature="testMovieMetadataOnWebHasCorrectMaturityRating(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testMovieMetadataOnWebHasCorrectMaturityRating" duration-ms="84526" started-at="2022-02-20T23:17:41 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:19:06 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <exception class="org.junit.ComparisonFailure">
            <message>
              <![CDATA[expected:<"[X]"> but was:<"[R]">]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.junit.ComparisonFailure: expected:<"[X]"> but was:<"[R]">
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at com.qt.qualithon.test.RottenTomatoesMovieSearchTest.testMovieMetadataOnWebHasCorrectMaturityRating(RottenTomatoesMovieSearchTest.java:160)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.junit.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectMaturityRating -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="741" started-at="2022-02-20T23:18:46 NPT" finished-at="2022-02-20T23:18:47 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="2447" started-at="2022-02-20T23:18:47 NPT" finished-at="2022-02-20T23:18:49 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectMovieRatingScore(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testMovieMetadataOnWebHasCorrectMovieRatingScore" duration-ms="88259" started-at="2022-02-20T23:18:49 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:20:18 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectMovieRatingScore -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="694" started-at="2022-02-20T23:19:06 NPT" finished-at="2022-02-20T23:19:07 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="2739" started-at="2022-02-20T23:19:07 NPT" finished-at="2022-02-20T23:19:09 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testMovieMetadataOnWebHasCorrectReleaseYear(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testMovieMetadataOnWebHasCorrectReleaseYear" duration-ms="86035" started-at="2022-02-20T23:19:09 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:20:35 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectReleaseYear -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="736" started-at="2022-02-20T23:20:18 NPT" finished-at="2022-02-20T23:20:18 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="2617" started-at="2022-02-20T23:20:18 NPT" finished-at="2022-02-20T23:20:21 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="FAIL" signature="testMovieMetadataOnWebHasCorrectWriters(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testMovieMetadataOnWebHasCorrectWriters" duration-ms="81642" started-at="2022-02-20T23:20:21 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:21:43 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expecting ArrayList:
  ["Stanley Kubrick"]
to contain only:
  ["Stanley Kubrick", "Anthony Burgess"]
but could not find the following element(s):
  ["Anthony Burgess"]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expecting ArrayList:
  ["Stanley Kubrick"]
to contain only:
  ["Stanley Kubrick", "Anthony Burgess"]
but could not find the following element(s):
  ["Anthony Burgess"]

at com.qt.qualithon.test.RottenTomatoesMovieSearchTest.testMovieMetadataOnWebHasCorrectWriters(RottenTomatoesMovieSearchTest.java:121)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectWriters -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="695" started-at="2022-02-20T23:20:35 NPT" finished-at="2022-02-20T23:20:36 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSessionSetUp" is-config="true" duration-ms="2586" started-at="2022-02-20T23:20:36 NPT" finished-at="2022-02-20T23:20:39 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method status="PASS" signature="testSearchByExactMovieTitleReturnsMovieAsFirstResult(java.lang.String)[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testSearchByExactMovieTitleReturnsMovieAsFirstResult" duration-ms="85163" started-at="2022-02-20T23:20:39 NPT" data-provider="popularMovieTitles" finished-at="2022-02-20T23:22:04 NPT">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchByExactMovieTitleReturnsMovieAsFirstResult -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="821" started-at="2022-02-20T23:21:43 NPT" finished-at="2022-02-20T23:21:44 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method status="PASS" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.RottenTomatoesMovieSearchTest@72b6cbcc]" name="testTearDown" is-config="true" duration-ms="772" started-at="2022-02-20T23:22:04 NPT" finished-at="2022-02-20T23:22:05 NPT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
      </class> <!-- com.qt.qualithon.test.RottenTomatoesMovieSearchTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
